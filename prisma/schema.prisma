generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model clinic {
  id                         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description                String?  @db.VarChar(255)
  image                      String?  @db.VarChar(255)
  name                       String   @db.VarChar(255)
  created_at                 DateTime @default(now()) @db.Timestamp(6)
  updated_at                 DateTime @default(now()) @db.Timestamp(6)
  user_id                    String   @db.Uuid
  tenant_id                  String   @db.VarChar(255)
  location                   String?  @db.VarChar(255)
  clinic_revenue             String?  @db.VarChar(255)
  clinc_id                   String?  @db.Uuid
  user_clinic_clinc_idTouser user?    @relation("clinic_clinc_idTouser", fields: [clinc_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user_clinic_user_idTouser  user     @relation("clinic_user_idTouser", fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id                           String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email                        String   @unique @db.VarChar(255)
  firstName                    String?  @db.VarChar(255)
  lastName                     String?  @db.VarChar(255)
  roq_user_id                  String   @db.VarChar(255)
  tenant_id                    String   @db.VarChar(255)
  created_at                   DateTime @default(now()) @db.Timestamp(6)
  updated_at                   DateTime @default(now()) @db.Timestamp(6)
  clinic_clinic_clinc_idTouser clinic[] @relation("clinic_clinc_idTouser")
  clinic_clinic_user_idTouser  clinic[] @relation("clinic_user_idTouser")
}
